openapi: "3.0.0"
info:
  version: 1.0.0
  title: controller_namespace_issue_for_modules_in_urlprefixes
  license:
    name: MIT
servers:
  - url: http://petstore.swagger.io/v1
paths:
  /api/v1/pets:
    get:
      summary: List all pets
      operationId: listPets
      tags:
        - pets
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of pets
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pets"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a pet
      operationId: createPets
      tags:
        - pets
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /animals/pets/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: The id of the pet to update
        schema:
          type: string
    get:
      summary: Info for a specific pet
      operationId: showPetById
      tags:
        - pets
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      summary: update a specific pet
      operationId: updatePetById
      tags:
        - pets
      responses:
        '200':
          description: The updated pet
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
    delete:
      summary: delete a specific pet
      operationId: deletePetById
      tags:
        - pets
      responses:
        '204':
          description: successfully deleted pet
  /petComments:
    get:
      description: list all pet comments
      responses:
        '200':
          description: list of comments
  /info/pet-details:
    get:
      description: list all pet details
      responses:
        '200':
          description: list of details
  /fgh/pet-detail2s:
    get:
#      x-route: f/l789898
      description: list all pet details
      responses:
        '200':
          description: list of details
  /fgh2/pet-detail2s:
    get:
      description: list all pet details
      responses:
        '200':
          description: list of details
  /theprefix/ctrl:
    get:
      description: list all pet details
      responses:
        '200':
          description: list of details

components:
  schemas:
    Pet:
      description: A Pet
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
          readOnly: True
        name:
          type: string
        store:
          $ref: '#/components/schemas/Store'
        tag:
          type: string
          x-faker: "$faker->randomElement(['one', 'two', 'three', 'four'])"
    Store:
      description: A store's description
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
          readOnly: True
        name:
          type: string
    Pets:
      type: array
      items:
        $ref: "#/components/schemas/Pet"
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
